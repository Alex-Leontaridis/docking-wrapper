name: Dependencies

on:
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: moderate

  update-dependencies:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install pip-tools
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools

      - name: Update requirements.txt
        run: |
          # Create requirements.in from requirements.txt
          cp requirements.txt requirements.in
          
          # Update dependencies
          pip-compile --upgrade requirements.in
          
          # Check if there are any updates
          if git diff --quiet requirements.txt; then
            echo "No dependency updates found"
          else
            echo "Dependency updates found"
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add requirements.txt
            git commit -m "Update dependencies [skip ci]"
            git push
          fi

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit

      - name: Run Safety check
        run: |
          safety check --json --output safety-report.json || true

      - name: Run Bandit security scan
        run: |
          bandit -r scripts/ utils/ -f json -o bandit-report.json || true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            safety-report.json
            bandit-report.json

  license-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install licensecheck
        run: |
          python -m pip install --upgrade pip
          pip install licensecheck

      - name: Check licenses
        run: |
          licensecheck --summary --recursive scripts/ utils/ tests/

  dependency-graph:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install pipdeptree
        run: |
          python -m pip install --upgrade pip
          pip install pipdeptree

      - name: Generate dependency tree
        run: |
          pip install -r requirements.txt
          pipdeptree --json --output dependency-tree.json

      - name: Upload dependency tree
        uses: actions/upload-artifact@v4
        with:
          name: dependency-tree
          path: dependency-tree.json 